#!/sbin/busybox sh

XML=$CONFIG_XML

echo "" > $XML

echo '
<settingsRoot>' >> $XML

echo '
  <settingsTab name="CPU">

    <settingsPane description="Apply the settings on boot only if the desired settings prove to be stable, else the device ends up in a boot-loop. If turned off, the displayed values do not correspond the current live values but the saved profile values, some inconsistencies may occur on applying." 
                  name="CPU control switch">
      <checkbox description="If enabled, the below settings will be applied at boot." 
                name="Set CPU settings on boot" 
                action="controlswitch CPU"
                label="Set on boot"/>
    </settingsPane>

    <settingsPane description="CPU scaling" 
                  name="CPU voltage control">' >> $XML

echo "
      <spinner description=\"Set the maximum freqency the CPU scales up to. Default: `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq | rev | cut -c 4- | rev` MHz.\" 
               name=\"CPU max frequency\" 
               action=\"cpugeneric /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq\">" >> $XML

while read FREQ UVOLT; do
  echo "
        <spinnerItem name=\"$FREQ MHz\" value=\"${FREQ}000\"/>" >> $XML
done < /sys/devices/system/cpu/cpu0/cpufreq/UV_uV_table


echo "
      </spinner>
      <spinner description=\"Set the minimum freqency the CPU scales down to. Default: `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq | rev | cut -c 4- | rev` MHz.\" 
               name=\"CPU min frequency\" 
               action=\"cpugeneric /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq\">" >> $XML

while read FREQ UVOLT; do
  echo "
        <spinnerItem name=\"$FREQ MHz\" value=\"${FREQ}000\"/>" >> $XML
done < /sys/devices/system/cpu/cpu0/cpufreq/UV_uV_table

echo '
      </spinner>
    </settingsPane>

    <settingsPane description="Decreasing voltage will lower power consumption of the CPU. Increasing it on overclocked frequencies improves stability. Too low voltage may cause instabilities and freezes." 
                  name="CPU voltage control">' >> $XML

while read FREQ UVOLT; do
  echo "
      <seekBar  description=\"Default voltage: $UVOLTµV\" 
	        name=\"${FREQ} MHz step\" 
                action=\"cpuvolt ${FREQ}\"
                unit=\" µV\" min=\"600000\" reversed=\"false\" step=\"12500\" max=\"1400000\"/>" >> $XML
  CPUFREQLIST="$CPUFREQLIST $FREQ"
done < /sys/devices/system/cpu/cpu0/cpufreq/UV_uV_table

echo '
    </settingsPane>
  </settingsTab>

  <settingsTab name="CPU scaling">
    <settingsPane description="PegasusQ is the default governor for daily running and complete power management schemes. The performance governor is purely for synthetic uses, locking frequency at maximum with all cores online." 
                  name="Active governor choice">' >> $XML
echo "
      <spinner description=\"Set active governor. Default: `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor`\" 
               name=\"Current governor\" 
               action=\"generic /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor\">" >> $XML

for GOVERNOR in `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors`; do
  echo "
        <spinnerItem name=\"$GOVERNOR\" value=\"$GOVERNOR\"/>" >> $XML
done

echo '
      </spinner>
    </settingsPane>
    <settingsPane description="Parameters governing the dynamic voltage frequency scaling policy on the CPU." 
                  name="DVFS tuneables">' >> $XML

echo "
      <seekBar description=\"The sampling period size in which the governor polls CPU load and triggers its decision making. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/sampling_rate` µS.\" 
               name=\"Sampling rate\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/sampling_rate\"
               unit=\"µS\" min=\"10000\" reversed=\"false\" step=\"1000\" max=\"100000\"/>

      <seekBar description=\"If we scale up to the maximum policy frequency, extend the next sample period by a factor of so much. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/sampling_down_factor` samples.\" 
               name=\"Sampling down factor\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/sampling_down_factor\"
               unit=\"samples\" min=\"1\" reversed=\"false\" step=\"1\" max=\"10\"/>

      <seekBar description=\"If the load exceeds the up threshold percentage on a single core, we trigger the scaling up logic. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/up_threshold`%.\" 
               name=\"Up threshold\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/up_threshold\"
               unit=\"%\" min=\"11\" reversed=\"false\" step=\"1\" max=\"99\"/>

      <seekBar description=\"When targeting a frequency when scaling down, aim for a target which accomodates the current load without triggering the up threshold minus the differential value. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/down_differential`%.\" 
               name=\"Down differential\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/down_differential\"
               unit=\"%\" min=\"0\" reversed=\"false\" step=\"1\" max=\"50\"/>

      <spinner description=\"Set the freqency threshold below which we use aggressive up-scaling. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/freq_for_responsiveness | rev | cut -c 4- | rev` MHz.\" 
               name=\"Frequency for responsiveness\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/freq_for_responsiveness\">" >> $XML

for FREQ in `echo $CPUFREQLIST`; do
  echo "
        <spinnerItem name=\"$FREQ MHz\" value=\"${FREQ}000\"/>" >> $XML
done

echo "
      </spinner>

      <seekBar description=\"If the frequency is below the frequency for responsiveness, use this as the up threshold. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/up_threshold_at_min_freq`%.\" 
               name=\"Up threshold at min freq\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/up_threshold_at_min_freq\"
               unit=\"%\" min=\"11\" reversed=\"false\" step=\"1\" max=\"99\"/>

      <spinner description=\"Set the freqency threshold beyond which we use aggressive down-scaling. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/freq_for_fast_down | rev | cut -c 4- | rev` MHz.\" 
               name=\"Frequency for fast-down\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/freq_for_fast_down\">" >> $XML

for FREQ in `echo $CPUFREQLIST`; do
  echo "
        <spinnerItem name=\"$FREQ MHz\" value=\"${FREQ}000\"/>" >> $XML
done

echo "
      </spinner>

      <seekBar description=\"If the frequency is beyond the frequency for fast-down, use this as the up threshold. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/up_threshold_at_fast_down`%.\" 
               name=\"Up threshold at fast-down\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/up_threshold_at_fast_down\"
               unit=\"%\" min=\"11\" reversed=\"false\" step=\"1\" max=\"99\"/>

      <seekBar description=\"When the up threshold is triggered, increase the CPU frequency by this percentage of the maximum frequency policy. This value gets dissected in the next two settings. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/freq_step`%.\"
               name=\"Frequency step\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/freq_step\"
               unit=\"%\" min=\"1\" reversed=\"false\" step=\"1\" max=\"100\"/>

      <seekBar description=\"The remainder of load space above the up threshold is dissected into three slices each having different frequency increase step sizes. The first two slices are each of up threshold differential size, lop-sided towards the lower end of the load scale. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/up_threshold_diff`%.\"
               name=\"Up threshold differential\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/up_threshold_diff\"
               unit=\"%\" min=\"0\" reversed=\"false\" step=\"1\" max=\"20\"/>

      <seekBar description=\"If we are in the first up threshold slice, we decrease the frequency step by twice this amount. The second slice decreases it once. In the last remaining slice the freq step value is taken as is. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/freq_step_dec`%.\"
               name=\"Frequency step decrease\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/freq_step_dec\"
               unit=\"%\" min=\"0\" reversed=\"false\" step=\"1\" max=\"33\"/>" >> $XML

echo '

    </settingsPane>
    <settingsPane description="Tuneables for flexrate requests; accelerated sampling speed when the screen is touched." 
                  name="Flexrate settings">

      <checkbox description="If enabled, flexrate requests are handled and sampling speed will be accelerated" 
                name="Flexrate enable" 
                action="generic01 /sys/devices/system/cpu/cpufreq/pegasusq/flexrate_enable" 
                label="Enable flexrate requests"/>' >> $XML

echo "
      <spinner description=\"Set the freqency threshold beyond which we ignore flexrate requests. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/flexrate_max_freq | rev | cut -c 4- | rev` MHz.\" 
               name=\"Flexrate max freq\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/flexrate_max_freq\">" >> $XML

for FREQ in `echo $CPUFREQLIST`; do
  echo "
        <spinnerItem name=\"$FREQ MHz\" value=\"${FREQ}000\"/>" >> $XML
done

echo "
      </spinner>
      <seekBar description=\"If set to anything else than zero, ignores the flexrate request rate and uses this one instead. Ignores values under 10000. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/flexrate_forcerate`µS.\"
               name=\"Flexrate force-rate\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/flexrate_forcerate\"
               unit=\"µS\" min=\"0\" reversed=\"false\" step=\"500\" max=\"30000\"/>
    </settingsPane>
  </settingsTab>

  <settingsTab name=\"CPU Hotplug\">
    <settingsPane description=\"Tuneables for CPU hotplug, online-ing and offline-ing of cores on light use when not being used.\" 
                  name=\"Scaling speed\">

      <seekBar description=\"The rate in governor samples at which a hotplug in decision takes place. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/cpu_up_rate` sample(s).\"
               name=\"CPU up rate\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/cpu_up_rate\"
               unit=\"sample(s)\" min=\"1\" reversed=\"false\" step=\"1\" max=\"40\"/>

      <seekBar description=\"The rate in governor samples at which a hotplug out decision takes place. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/cpu_down_rate` sample(s).\"
               name=\"CPU down rate\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/cpu_down_rate\"
               unit=\"sample(s)\" min=\"1\" reversed=\"false\" step=\"1\" max=\"40\"/>

      <seekBar description=\"The number of cores to bring up online when a hotplug in decision is triggered. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/up_nr_cpus` core(s).\"
               name=\"Core upbring-count\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/up_nr_cpus\"
               unit=\"core(s)\" min=\"1\" reversed=\"false\" step=\"1\" max=\"4\"/>

    </settingsPane>
    <settingsPane description=\"Override hotplug decisions and limit core count to given boundaries. Priorities: hotplug lock > max cpu lock > min cpu lock\" 
                  name=\"Configuration overrides\">

      <seekBar description=\"Locks the core count and disables the hotplug logic. 0 disables the setting. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_lock` core(s).\"
               name=\"Hotplug lock\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_lock\"
               unit=\"core(s)\" min=\"0\" reversed=\"false\" step=\"1\" max=\"4\"/>

      <seekBar description=\"Maximum allowed number of cores. 0 disables the setting. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/max_cpu_lock` core(s).\"
               name=\"Maximum CPU lock\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/max_cpu_lock\"
               unit=\"core(s)\" min=\"0\" reversed=\"false\" step=\"1\" max=\"4\"/>

      <seekBar description=\"Minimum allowed number of cores. 0 disables the setting. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/min_cpu_lock` core(s).\"
               name=\"Minimum CPU lock\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/min_cpu_lock\"
               unit=\"core(s)\" min=\"0\" reversed=\"false\" step=\"1\" max=\"4\"/>" >> $XML
echo '
    </settingsPane>
    <settingsPane description="To bring up a core, all of the given conditions must be fulfilled. The governor analyses the up/down rate amount of sample information collected to this point, and taking the roof of each value type over the whole rate period. If the conditions from the starting point of the current core count are met, it triggers a CPU up or down. The frequency thresholds are the maximum frequency reached during the whole rate period. The runqueue thresholds are the 100th factor of the thread count averages running on the system." 
                  name="Hotplug conditionals">' >> $XML


echo "
      <spinner description=\"Freqency threshold to bring up a core if 1 online. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_freq_1_1 | rev | cut -c 4- | rev` MHz.\" 
               name=\"Hotplug freq from 1 core to online\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_freq_1_1\">" >> $XML

for FREQ in `echo $CPUFREQLIST`; do
  echo "
        <spinnerItem name=\"$FREQ MHz\" value=\"${FREQ}000\"/>" >> $XML
done

echo "
      </spinner>
      <spinner description=\"Freqency threshold to bring down a core if 2 online. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_freq_2_0 | rev | cut -c 4- | rev` MHz.\" 
               name=\"Hotplug freq from 2 cores to offline\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_freq_2_0\">" >> $XML

for FREQ in `echo $CPUFREQLIST`; do
  echo "
        <spinnerItem name=\"$FREQ MHz\" value=\"${FREQ}000\"/>" >> $XML
done

echo "
      </spinner>
      <spinner description=\"Freqency threshold to bring up a core if 2 online. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_freq_2_1 | rev | cut -c 4- | rev` MHz.\" 
               name=\"Hotplug freq from 2 cores to online\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_freq_2_1\">" >> $XML

for FREQ in `echo $CPUFREQLIST`; do
  echo "
        <spinnerItem name=\"$FREQ MHz\" value=\"${FREQ}000\"/>" >> $XML
done

echo "
      </spinner>
      <spinner description=\"Freqency threshold to bring down a core if 3 online. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_freq_3_0 | rev | cut -c 4- | rev` MHz.\" 
               name=\"Hotplug freq from 3 cores to offline\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_freq_3_0\">" >> $XML

for FREQ in `echo $CPUFREQLIST`; do
  echo "
        <spinnerItem name=\"$FREQ MHz\" value=\"${FREQ}000\"/>" >> $XML
done

echo "
      </spinner>
      <spinner description=\"Freqency threshold to bring up a core if 3 online. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_freq_3_1 | rev | cut -c 4- | rev` MHz.\" 
               name=\"Hotplug freq from 3 core to online\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_freq_3_1\">" >> $XML

for FREQ in `echo $CPUFREQLIST`; do
  echo "
        <spinnerItem name=\"$FREQ MHz\" value=\"${FREQ}000\"/>" >> $XML
done

echo "
      </spinner>
      <spinner description=\"Freqency threshold to bring down a core if 4 online. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_freq_4_0 | rev | cut -c 4- | rev` MHz.\" 
               name=\"Hotplug freq from 4 cores to offline\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_freq_4_0\">" >> $XML

for FREQ in `echo $CPUFREQLIST`; do
  echo "
        <spinnerItem name=\"$FREQ MHz\" value=\"${FREQ}000\"/>" >> $XML
done

echo "
      </spinner>
      <seekBar description=\"Runqueue threshold to bring up a core if 1 online. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_rq_1_1` thread depth.\"
               name=\"Runqueue depth from 1 core to online\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_rq_1_1\"
               unit=\" thread depth\" min=\"100\" reversed=\"false\" step=\"5\" max=\"600\"/>

      <seekBar description=\"Runqueue threshold to bring down a core if 2 online. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_rq_2_0` thread depth.\"
               name=\"Runqueue depth from 2 core to offline\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_rq_2_0\"
               unit=\"thread depth\" min=\"100\" reversed=\"false\" step=\"5\" max=\"600\"/>

      <seekBar description=\"Runqueue threshold to bring up a core if 2 online. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_rq_2_1` thread depth.\"
               name=\"Runqueue depth from 2 cores to online\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_rq_2_1\"
               unit=\"thread depth\" min=\"100\" reversed=\"false\" step=\"5\" max=\"600\"/>

      <seekBar description=\"Runqueue threshold to bring down a core if 3 online. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_rq_3_0` thread depth.\"
               name=\"Runqueue depth from 3 core to offline\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_rq_3_0\"
               unit=\"thread depth\" min=\"100\" reversed=\"false\" step=\"5\" max=\"600\"/>

      <seekBar description=\"Runqueue threshold to bring up a core if 2 online. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_rq_3_1` thread depth.\"
               name=\"Runqueue depth from 3 cores to online\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_rq_3_1\"
               unit=\"thread depth\" min=\"100\" reversed=\"false\" step=\"5\" max=\"600\"/>

      <seekBar description=\"Runqueue threshold to bring down a core if 4 online. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_rq_4_0` thread depth.\"
               name=\"Runqueue depth from 4 core to offline\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/hotplug_rq_4_0\"
               unit=\"thread depth\" min=\"100\" reversed=\"false\" step=\"5\" max=\"600\"/>

    </settingsPane>
    <settingsPane description=\"Additionally to the frequency and runqueue depth, we consider the average frequency load on all cores and conditionally consider that on top of the other conditions. This enables more aggressive and true-to real load scaling.\" 
                  name=\"CPU core count load biasing\">

      <seekBar description=\"Core count beyond which we bias the online count through the global load. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/cpu_online_bias_count` core(s).\"
               name=\"CPU online load bias count\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/cpu_online_bias_count\"
               unit=\"core(s)\" min=\"1\" reversed=\"false\" step=\"1\" max=\"4\"/>

      <seekBar description=\"Global average load up threshold of the last up rate sample count period, if current core count correponds or exceeds the core bias count, to enable hotplug-in of further cores, if frequency and runqueue depth conditions are also met. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/cpu_online_bias_up_threshold`%.\"
               name=\"CPU online bias up threshold\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/cpu_online_bias_up_threshold\"
               unit=\"%\" min=\"1\" reversed=\"false\" step=\"1\" max=\"100\"/>

      <seekBar description=\"Global average load down threshold of the last up rate sample count period, if current core count exceeds the core bias count, to enable hotplug-out of core(s), regardless of the primary conditions. Default: `cat /sys/devices/system/cpu/cpufreq/pegasusq/cpu_online_bias_down_threshold`%.\"
               name=\"CPU online bias down threshold\" 
               action=\"generic /sys/devices/system/cpu/cpufreq/pegasusq/cpu_online_bias_down_threshold\"
               unit=\"%\" min=\"1\" reversed=\"false\" step=\"1\" max=\"100\"/>" >> $XML

echo '
    </settingsPane>
  </settingsTab>

  <settingsTab name="GPU">

    <settingsPane description="Apply the settings on boot only if the desired settings prove to be stable, else the device ends up in a boot-loop. If turned off, the displayed values do not correspond the current live values but the saved profile values, some inconsistencies may occur on applying." 
                  name="GPU control switch">
      <checkbox description="If enabled, the below settings will be applied at boot." 
                name="Set GPU settings on boot" 
                action="controlswitch GPU" 
                label="Set on boot"/>
    </settingsPane>' >> $XML

echo "
    <settingsPane description=\"By editing the following configurables you can change the performance behaviour of the GPU.\" 
                  name=\"GPU scaling settings\">

      <spinner description=\"Set the maximum freqency the GPU scales up to. Default: `cat /sys/devices/system/gpu/max_freq`MHz.\" 
               name=\"GPU max frequency\" 
               action=\"gpugeneric /sys/devices/system/gpu/max_freq\">" >> $XML

while read FREQ; do
  echo "<spinnerItem name=\"$FREQ MHz\" value=\"$FREQ\"/>" >> $XML
done < /sys/devices/system/gpu/freq_table

echo "
      </spinner>
      <spinner description=\"Set the minimum freqency the GPU scales down to. Default: `cat /sys/devices/system/gpu/min_freq`MHz.\" 
               name=\"GPU min frequency\" 
               action=\"gpugeneric /sys/devices/system/gpu/min_freq\">" >> $XML

while read FREQ; do
  echo "
        <spinnerItem name=\"$FREQ MHz\" value=\"$FREQ\"/>" >> $XML
done < /sys/devices/system/gpu/freq_table

echo '
      </spinner>' >> $XML

read trash1 UP trash2 DIFF < /sys/devices/system/gpu/thresholds

echo "
     <seekBar  description=\"If load in the last sampling period exceeds the set threshold percentage, the GPU jumps to the next higher frequency step. Default: ${UP}%.\" 
               name=\"Up threshold\" 
               action=\"gputhresholds UP\" 
               unit=\"%\" min=\"30\" reversed=\"false\" step=\"1\" max=\"99\"/>" >> $XML

echo "
     <seekBar  description=\"If load falls below (up threshold - down differential), the GPU dynamically lowers down its clock to a frequency step accomodating the last sampled load without triggering the up threshold on the next sample. The down differential cannot be set higher than (99 - up threshold). Default: ${DIFF}%.\"
               name=\"Down differential\" 
               action=\"gputhresholds DIFF\" 
               unit=\"%\" min=\"1\" reversed=\"false\" step=\"1\" max=\"50\"/>" >> $XML

echo '
    </settingsPane>
    <settingsPane description="" name="GPU voltage control">' >> $XML

while read FREQ VOLT; do
  echo "<seekBar  description=\"Default voltage: $VOLT\" 
	          name=\"${FREQ%???} MHz step\" 
                  action=\"gpuvolt ${FREQ%???}\"
                  unit=\" mV\" min=\"600\" reversed=\"false\" step=\"25\" max=\"1200\"/>" >> $XML
done < /sys/devices/system/gpu/volt_table

echo '
    </settingsPane>' >> $XML
echo '
  </settingsTab>

  <settingsTab name="I/O">
    <settingsPane description="Set the active I/O elevator algorithm. The scheduler decides how to handle I/O requests and how to handle them. FIOPS is the everyday recommended default scheduler."  
                  name="I/O schedulers">' >> $XML

echo "
      <spinner name=\"Current internal storage scheduler\"
               action=\"iosched internal /sys/block/mmcblk0/queue/scheduler\">" >> $XML

for IOSCHED in `cat /sys/block/mmcblk0/queue/scheduler | sed -e 's/\]//;s/\[//'`; do
  echo "
        <spinnerItem name=\"$IOSCHED\" value=\"$IOSCHED\"/>" >> $XML
done

echo '
      </spinner>' >> $XML

echo "
      <spinner name=\"Current SD card scheduler\"
               action=\"iosched sd /sys/block/mmcblk1/queue/scheduler\">" >> $XML

for IOSCHED in `cat /sys/block/mmcblk0/queue/scheduler | sed -e 's/\]//;s/\[//'`; do
  echo "
        <spinnerItem name=\"$IOSCHED\" value=\"$IOSCHED\"/>" >> $XML
done

echo '
      </spinner>
    </settingsPane>

    <settingsPane name="Dynamic FSync" 
                  description="fsync() serves as a flush/commit to the write buffer when doing I/O writes to storage. It stores a buffer with data and periodically writes it to the storage device. Disabling it will no longer buffer and directly write the data.">

      <checkbox description="Dynamic FSync disables file write synchronosity during screen-on, and re-enables it on screen-off." 
                name="Enable dynamic FSync" 
                action="generic01 /sys/kernel/dyn_fsync/Dyn_fsync_active"
                label="Enable dynamic FSync"/>

    </settingsPane>
  </settingsTab>

  <settingsTab name="Audio">
    <settingsPane description="Speaker Tuning Settings" name="Speaker Tuning">
      <checkbox description="Enable speaker tuning for better bass response on main speakers" 
                name="Speaker Tuning" 
                action="generic01 /sys/class/misc/scoobydoo_sound/speaker_tuning" 
                label="Speaker Tuning"/>

      <seekBar  description="Speaker Amplification Offset. 0 means stock value. Having too much amplification may cause distortion." 
		name="Speaker Amplification Offset" 
                action="generic /sys/class/misc/scoobydoo_sound/speaker_offset" 
                unit="" min="-6" reversed="false" step="1" max="6"/>
    </settingsPane>

    <settingsPane description="Headphone amplification increases volume only on headphones and headsets." 
		  name="Headphone Amplification">
      <seekBar  description="Headphone Amplifier Level (0-63 which corresponds to -57db-6db)" 
		name="Headphone Amplifier" 
                action="generic /sys/class/misc/scoobydoo_sound/headphone_amplifier_level" 
                unit="" min="0" reversed="false" step="1" max="63"/>
    </settingsPane>

    <settingsPane description="The stereo expansion effect produces a virtual 3D effect on sound." 
		  name="Stereo expansion">
      <checkbox description="" 
                name="Stereo expansion" 
                action="generic01 /sys/class/misc/scoobydoo_sound/stereo_expansion" 
                label="Enable stereo expansion"/>

      <seekBar  description="Stereo expansion gain level (0-31dB)" 
		name="Stereo expansion gain" 
                action="generic /sys/class/misc/scoobydoo_sound/stereo_expansion_gain" 
                unit="" min="0" reversed="false" step="1" max="31"/>
    </settingsPane>

    <settingsPane description="EQ Settings" name="EQ Settings">
      <spinner  description="Choose which equalizer settings to use: Presets or Graphical Equalizer." 
                name="EQ Presets" 
                action="eq-presets eq_selection">

             <spinnerItem name="Use presets" value="0"/> 
             <spinnerItem name="Use graphical equalizer" value="1"/> 
      </spinner>
    </settingsPane>

    <settingsPane description="Controls the hardware equalizer band volumes." 
                  name="Equalizer settings">
      <spinner  description="Hardware equalizer presets. Note: The band sliders currently only update after an application restart." 
                name="EQ Presets"
                action="eq-presets eq_preset">

             <spinnerItem name="Flat (Disabled)" value="0"/> 
             <spinnerItem name="Bass-extreme" value="1"/> 
             <spinnerItem name="Bass and Treble" value="2"/> 
             <spinnerItem name="Treble" value="3"/> 
             <spinnerItem name="Classic" value="4"/> 
             <spinnerItem name="Pleasant for ears" value="5"/> 
             <spinnerItem name="Eargasm" value="6"/> 
      </spinner>

      <seekBar  description="" 
		name="Band1 gain" 
                action="eq-presets eq_band1" 
                unit=" dB" min="-12" reversed="false" step="1" max="12"/>

      <seekBar  description="" 
		name="Band2 gain" 
                action="eq-presets eq_band2" 
                unit=" dB" min="-12" reversed="false" step="1" max="12"/>

      <seekBar  description="" 
		name="Band3 gain" 
                action="eq-presets eq_band3" 
                unit=" dB" min="-12" reversed="false" step="1" max="12"/>

      <seekBar  description="" 
		name="Band4 gain" 
                action="eq-presets eq_band4" 
                unit=" dB" min="-12" reversed="false" step="1" max="12"/>

      <seekBar  description="" 
		name="Band5 gain" 
                action="eq-presets eq_band5" 
                unit=" dB" min="-12" reversed="false" step="1" max="12"/>
    </settingsPane>

    <settingsPane description="EQ Extras" name="EQ Extras">
      <seekBar  description="This will prevent distortion by decreasing the output volume by the selected amount. Leave it 0 if you do not have a distortion problem." 
		name="Negative Digital Gain" 
                action="eq-presets digital_gain" 
                unit=" dB" min="0" reversed="false" step="1" max="12"/>
    </settingsPane>

    <settingsPane description="Optimization, conversion quality, signal processing and effect settings" name="Other Settings">
      <spinner  description="Tuned WM1811 FLL to generate clock source" 
                name="FLL Tuning" 
                action="generic /sys/class/misc/scoobydoo_sound/fll_tuning">

             <spinnerItem name="Disabled" value="0"/> 
             <spinnerItem name="Enabled" value="1"/> 
      </spinner>

      <spinner  description="For 48kHz sample rate, the DAC oversample rate is 128fs when this option is selected, which makes the music sound better." 
                name="DAC OverSampling" 
                action="generic /sys/class/misc/scoobydoo_sound/dac_osr128">

             <spinnerItem name="Disabled" value="0"/> 
             <spinnerItem name="Enabled" value="1"/> 
      </spinner>

      <spinner  description="Bypass analog channel mixer and redirect the sound directly to the output." 
                name="dac direct" 
                action="generic /sys/class/misc/scoobydoo_sound/dac_direct">

             <spinnerItem name="Disabled" value="0"/> 
             <spinnerItem name="Enabled" value="1"/> 
      </spinner>

      <spinner  description="This forces the output to be mono even if the source is stereo" 
                name="Force Mono" 
                action="generic /sys/class/misc/scoobydoo_sound/mono_downmix">

             <spinnerItem name="Disabled" value="0"/> 
             <spinnerItem name="Enabled" value="1"/> 
      </spinner>

    </settingsPane>
  </settingsTab>
</settingsRoot>' >> $XML


chmod 777 $XML
